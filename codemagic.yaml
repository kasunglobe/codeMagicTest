# Check out https://docs.codemagic.io/yaml/building-a-react-native-app/ for more information
# Please review and update values

workflows:
    react-native-android:
        name: React Native Android
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            vars:
                GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: Encrypted(Z0FBQUFBQmc3bDR0X0tWMDRISVg0NS1xXzlRMGU3M2VsNUZ0MFpMNFQwdFRtY1QySGMzdWdaMTN0MFFMeERYSDdrc2x0V2RFdmtVVlFQUEdSUi10TjFVZi1MYl9hS2dYV2ZBTTNpSGhqQzdqNHIxQUhDeVp1UDV0TDZXR0toNHkyNHRTbF9IVE1BRGQ=) # <-- Put encrypted CONTENTS of your Gloud crendentials file here
                PACKAGE_NAME: "com.kasunv.codeMagicTest" # <-- Put your package name here e.g. com.domain.myapp
                CM_KEYSTORE: Encrypted(Z0FBQUFBQmc3bDhyZUszYTNSeDNkYlVWRGpaSEtuNXowWlIyblp5cDJFUlppTXB1NVpMbE5QMVliNWZNTUFsbVBfRjNObmN3ZzZybi0zNGZjNkx2clUxb2owakdkR0hLUkZWZ0h5QjYwTVQ3dGsyVlBzLWltSl9tcjZuNHYxWVZpcnhYelVQWmI0T2g5SVJhdHVMX2tmNDFEdDNjOGdDeGVyeW5aUndWdV9ObXI4SGs0T3JfaWdqUlpGVjFyY1Bvd05Rc1gzOGZBYXBOUm5tRUd0SkdOLWhiUmJrT1p3UjlNZmJmV3dkRk9SSDA2TFBDQ1JJMTN1QThMbkRGRHRFVy1KMXhKQXdEOUtTQUR5MUlmMXRydjBDOEcxWGlLWVp4eGRYSVpabmNGa204ZzVsMFUydlpjaGpvWHU2dklRd1lYQXkzOVpaNDg3SGtKLTg0RVJrMmhGdGpyN3Z3b3ZFZS1hdER2QTd4WGRMVnBtUDQ2cDh0RmxkYzZwZjdQWHZtQXdIZnI1Wlhucm5SMkFGbVBrNzhYQVQ0cGN1SnRmOWlrRk94em1Ib21EdVd3RURaVEE2cFBpeWZOekcxU0t1SGRfc3B2ZFFQUDZaM2lCZFNDLU1WR2R2ekk3dE1nNVVLMm5wdlBzQ1FwNTdBcjJVcnBFM2plM3BCdnFjLUdvV3RPWmR5V3JJeG5jeW9WTG5OTGJ1dE0xVWV5Zjk3Rk1MYXJ3em51Ti14T0FPQmZld0FDWHEwaVlpWm1sSkxtT0lWLTZGVmRZeDczdG5HbTB1a2MwMnFpQ3NFeTlnMVotUXBWSHQyeXhmejdicDc2UXM1ZUlRYWd1YXAycTRpRUo2U0pYY25mRzgxWkc1MlVpN0x0QlEzYVpaeGRqaUhyZVVkeGVwekt1aVl0VFlzTEFYTzd1aW00SmQ0dFhmWDJkQ3RpdUx1ZnJsTTkzZlRDdVZ0V1JRbHZZYkNVX090T181Wm41Q2hVR09WbUU4c04zOVZnMkFKMWpNSVFTdmJRcmc3cm43TDA2ZWF3SUVjMkowUFFWSXh3ZmVTYmcyN3BGNE9oU2lmcFB4UDhRblFsTmYwYmR1elZFWnFLRjExX0k3ZnRPS0pyQlJwb3pVSVNiY2d6MWhwZjNEX3o1cmZGb1FpUVh5bXhYS2dYekNBeVllZnVGZW9BZmd0aDVlWGotc25OcTV5ZDVGeG8yYkJjVFRVV3JBNWRDWDlwNHRzajEwalVGa05Bc0FnY1daemg0NmdrRUp5V09kOFVUcXMwcnBFcnFBZDRYczZWMUJCTHpIZDdhTEVnQTByOU9LNlJuV0NQVnlOVlQ1ejNOU29IUmw4NUtfeVZrczNCdkd4RmpUQTAwYTkxdkFPTkZCVHQ0bERpWVl3SmlvaVZ1SlNsRWRiWjJXQVR1aW9YeU1aRXllQncyUVV4dFVtQWpBZjB6X2ZTbE42MkhNQ3llMWVhY2EyWFdPQ21mdV9wZEpQYVhhLVJ5U1lDNEJTZUhUcUlZOE4tRDdSMm52a1FPNl90d2taZVJscXg4aDkzbnB6XzZZcXh2RTR0WFNWYW1FSFNrd21ZWm1qQV9jc2Q4YWxxX0tUb19CbzVVUXhxRWRxRHE3d3gzeEdIRjNOVmFiMmpNZVoyMFVpMnFHeU5IMldjcHBQb3h6ZERfOVpEcFo0UG8tZUZQOEFaZE5aSWNJUE1zanQzUkNOTmVrcXBsRHh6d3NDT2VoQnotVXNvcmhYRmhTSWxDM2pBb3N0MFhDN2toemRlVDYwMG1QRWUybi1UMk05WFB6aUxHVXNPNGRzcmZfZFBaX2hxSXNCQmIzUmhaN2ZSdExVNFpJLWJ4aEI1YTFGTVk1SHE3YmhncWNwNGZDU2hFS2NFb0t2TTl2MElxVkdhdkUwYzk5eUZZVDlGc1hFX1p3emNwX193V3RhdUlLUzUyc3A4UEx2MldWaVFYOG5CUDRSSEJETUw0b0J5cGxNaTVCQkpMX1k4QnZVY25OUjJrVTAyVVQtWmlodmVqZFFNMWdXQzNKaHloQjlySXRYYXc3Njc5cUZVNkFfLUt0U3R6LXdUbkc0RmkxbGtJQ2xxbXVmc1RIdFVqWXpaVWJjLWpSa2RyczhiYW5oajNqVTM5ZEcxcnhxLUFJOTYtZ094dkVWSGM2c2ZNZG4yMFlMaVJsVUZwSVllT0JKZzZlemZEQ2pRTEF2eXg4RF9UbXVHbjJlLUtGMGdBWVR3NUJvLTVIX25BdXIxSm9WNjhneWZjTWF2dkhWcGVianN6YkMwb1RqMVJOTktsN214dmdtNmVEQl9uR3JLSjNQZFRNZHZSYm1CVmtXY0UzZ3lHUjMzT2xEZnNlN3llaDc2YjVseVRISjFvczNNc2JtZUlzQzk3RUt3TTdlR0xidE1naHhSWkwwT3JCdUJJNk9YSDlHOW1IaHNNY3NLd3lRZExaSnkxQUUwTDJJOC1VVlQ3VE1YSjBTOE5HblA3ODBQT1FhSlJyRUx6cGVWNWFDVGV5bGNnZE5ZVUtaV21sajFWUjdrREUzcjNuTG05ZnBRMV9hcU04dW9IcjloaHVHM1dQRGVmaE5wLV9sM0gteUtVSy1QM1BmUVNveTlWTk5HdzNOck91bWgxX1JUVWNVTWhGaVZ1RUVWVkg1RV9hekROc1U5d2xwZE1BdExRYTNNYlJ4WTZpZEU0aVZEdzlrX3dDMUFZQm5MSGtDOXJWZ0F6RjVoX0t3UDBrcnoybkRJWHlfRUt1aWVtUmJ1S2tiSHJIeHowQ1FoVlZMcDU1OXRELVYtUVN3OTVHcDd0Qm1uWGphZ2V2a0ZsQTB4RVFPaURSUmx3ZlVmRTFvZTg2OFlWcDh0MXI1QzlPR3YtMWFzcVM3VTE3X1pkTnpUZUN5b0xuZzZ4eWdQems1aWNQcFdIcUswUVRjZEs3Y0FzYnMyX2dIdV9wQWdXRkgxbXhLc2c3UGFmVkdpcjhReHN2cmI1cFpMb3pnaGhyRDFpYlhuWWo5U0pNNnd4WVVGUHRRR3FGQlRxb0Z2S0RHV1ZSaERHTFJHOTlMbk9xa0NEaHN2T0R2ck1GQVQwbEptal9kQkY5RXdVVWZGcFRXTFpMdml0Y2ZpMFNtUlRUTllvZ083aXQ0NGxWMkVPRmpXN3VlU09fcG1iT1hQNkloTVpuVi1UNWtKZE16QnZ2OTlIV3ZMclNZNDNaTU1GdzZHUnB2WkNvUDlJamM2Y2w5YmNGTUxvQUw1REx5cUJKLVVhaV9rNVM1TC1NT3hMejlQTlU4NGhSeEZoX3ROU0xRcXlFQ0FqNVVhSUJoSzZLLVRBaWtMRUlMeHI3MEdKUTRacXpQQ3owNkp6dFVvQVp6RXBrN1dTTzlKMjcxRzZRVDNpdEtLMVVicHNEZG1vZS1kMzZuNGVSM2F5NERTY2xkLTFwVkVsUUp3MWVxTWhMek1QLUNfQ1FJV2VJRVo3bDNBaFJRT2hBdTVtUkhBSmE4ZUE2QlFkZ1RzYXMxVURwS0tYRW9HYzNQekdnOUhxa0dNOFJFREJFeHRrZFF1SzE0akwzYzNobk5JWTNZMzJnYmZnZW9NUWE4WVQ3UlUzSk5Obk1NTXdGQmVNSzdyanVqYjEyNzF1eWlqVDVXaW1Kc1cxbXQzQXhvcnV4TzdMZ2ZnSWN3b2FldW14SzRPWTdfQU9qZVdZQzVocmtWbklMM19rNkRySW9ISTJuSDZRZkJUQkxyY0VhT2xBTlUyanZsMGc3N0E2a1ZyQ2FGaFQ5cjZpX0RRVEJBX3kyWFR0S2loR0xheno2ZVJmblFNbFBxaXo2UEc4NEdaYmFLZVdUQnBvZlZ0WVM1ZHc2b19RanlKSXRYdnhsZ2xRejMtbjBQbHYzZGVDMng0UGYzRHoweDB3ajRNS0ZBMlNvRVFvQzFnODRLOVdfSGJjTl93ODZFa2hoWnE0SXA3YWtnWnJwRmZXUkJWZ3FzbExrN3J5VW9UbUFGbXcta3NWaVdVZlNsOVhiSGh0RTFBNUpqMjloU2F1ZVMxdV9panBWTjZKUUl0VnBGQXVLVEFsdl95UHRmblUtTHpRdUloazJtaXk5dWdVdVNzWm5TTzdfY2Z2aHoyclFramFPa3lqVG5BQjY2X19nUUpZWWt0bWp1TzBSaXVWdTdjREk1M0xELTFjbGVQRmxzenNWb19QMjU4YlV6MlFUZDNVazdmWExyazFnZ2FkWnliZXpLUW1TWHF0aWcwUENqSWNkZU1sd1BqcFc2aWk0WmJvZFl4VW5QVzN3OThla1N2SV9YSHpROG5qY2xKX2gzOTA0STNxeEU5aEwwU2hQTmxVcmRmSVp6YW5pTXd0WDY0ODFXRFZYVk9GM1NQbjBSZEc0dVctdWw0YXQ3d1hYZGYxSmtZU0pzVHJjWFFSV0NpaTVLLTBIT1ZHNmxKdG5pUUhwMF9zQ0tod0dMRFRlcUh5SXQ4b2drYy1ENTBvcUFzMDhQSXU4dFNvVVRCRGNBWkFIWUVCRTlMMkhkYVpNNUR4VjNZMmc2YUtnN0NVQjRjektxa0Vzci10VGN0cjZhOGxYTlFrNTFMVUdZdGQyQ0Nfb3hFYXg0NE9zTEV6WVBZcTJqbDAzZkVWUmpwalhJbUJxeDlBelRWbXRYaUtVZGgyZGxySnVsd3V0VDNETE9DUXdudGJqVm5XVE0xeWhfbWFWVFc5RU81TlJraXhoWS00STFtblhOcmloNVp0MG92Z3ZWQi1YOEI5NHV4d0t4T0lHeElZSnpnREFjUVVPVWNvYWdCTnR1WnJFT2Y0V2Zld2hUeU9wNzVOUXBsMUk3UkxDQnlpX19YVEpyV1dJOElhaHQzNHVnV1RiVHdOX2dCVG5xb2lZOVV5Y09pSEZmN0xJOGswaGltdHZkTnFleEo0a0JqdVlza3dhbWJHR1ItNy1yT3haX2p4N1ZzeVZwR0lXT0pET1hGdHVaTzJ2UVBLUEgtc1c1WHJSV0ZwZDNqckNVQ0lmSU1oTVEyOU45V1A4WGNCbTA0cVpzWmNfa0F5TGFhTG5IZWZSZHZka3FUUElFVGNmdDZhNlFIZEFSOF9nc1NjQkhYdXFubDZ6QXFIQTg2ZVpXUTZGOV9xMmxNRnNoX0FESG1CcUxIcG1id3dnM0puU2VaYjE2elZsSVhkdENLVFFNOHNKS1BqOVd6b2dHZVkxOEVUbDJKS0tDREdWM3ZlMlNha3kwazMxdnc5RXpfMnF6MkJvTVdTdWt5Rk5CeGUtRGZiUGJXNlp6UmdTTjR3R0tlcXRLT1pIZVF6TXFqM05BUjA5d3RYc2VRWXIzdGR6b2hKMHA4U05fcXFzdWVuUVRNaDVFMkNRUTJMMFRhWnlfSDhjUVlPbFVTZnFFTmtrZi1DMVJ5bjM5LS1JOWVmREg1TVdtZFV4VlR5X1hFVHJSZzNBd2tEZVBlNG4tYnpTZEVpZzdQZC1uTF9FeVlxYzVocFdOel9rMExNQ0V5UVF0dDdxdTIzZzYxWG1Ta1lHSnNnTXpkeGNTSV9fbEJFUmp0NWpNQmt0ZmpUNnJNLXFydDA2YVdtVjhmVFRDZVh5RnFBNkVvLXRBcnIxeFFnbjBMVG9mNjRXV0xGdFNka3ZqMWtfd05LbHd4YXV1VHByZmFrYzBHOERoTmVkN3l0dXhtNmZLUXFVZUFtZ1VjR2t5dkRXWVpvVmJzNFZjQWdpaDBLeEdwUmhad0dNZXpZdGFQendSdTZWa20xQ2FCenNkZkV1X1lpNW5PdUxmcEVLUEVaZ05RdVZZczRpNDRlRzZzb3ZPWTdUVW95Mi1Xa2xYQVNsWVQ3d2JSZDJTaFkwdVVYLTFDaXRyV1NKT1dhS3NRWHV2bUdRb05FYmY5Z0xQTXZ6dE1FMkhKd01hVjN5X3hPT0o3ZTlveDRQVzBIOWxvZ21mbGFaMVJubXBtSS15ZGdsTnUwMkxaa0xvVUE5cHJVdlItckhOTmhKTGJBWU5BSUhNWk5vSzZFaGRndWNkX3dFMTJFemxzVDlDc2lDSUhWQ29sUkZlYUJGSHU0UjY4ajBsQnIxT3hNcm5Ldmx0eExjb1k0c2tmZ1VRODZkWmRfY2dpSW9ySHc5b3BTcTUxQ05ZMGJ0ZnNfQUR5dnA0QVI2bXhxeTBkNWVGdmN2Q2EyTmRzNGVoVTRmMEp5TXJaU0tNZ29XRzBwYnQ5UmhBOVNSUzB0V09jZkdySFhmWkxwd0dnYkFHbVBtNjQ4a2JPWk43OHppWFB1a0dZTHhaVW8tNkJoeUdlb09YdXJydFVhR09LcXB6ai14RVBpV045cVZkdTNSVE45eGZTd3FfM2d1STRETEZGeUFEQ21TQTdxcUsxWEwwaHd4dTgtM1RRMTRQRy0wSVFlRkVuYktUdmw2XzBoWDQtU3JNLVpUNnlMVWQtcW1xSmxwSWoyX3B2TU1SM2pnNnplVlJzZG8tSEZOWnhUeUp5QVVoVUNlenFSTldqSGI3Szk2U2FfRC1odlFhMFNyZHNMdE9FOEdVVGlPeUhkdElwUm90QUljbVE4eTRnUmQ5bTV4WllkNXY0N3JyZ2FsOVE3Rnd4SFZEcXpCcHZaeXo2SmhhYVhFdnY1UU5vcXM4YUhZNnJHblJzX1JYSUJQRTR4WmJHV2k1U0xNPQ==) # <-- Put your encrypted keystore file here
                CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmc3bDJORjRldHNLVUVfSXNscF92Z3BvV2RVcUpMTmJKWXZFUEZjUFQ2clBITmEtNklFaFJOallKamxsbUc1SlBxcW93TUFXWHdJZ2hmdGZyamk4MHN0MV91LWc9PQ==) # <-- Put your encrypted keystore password here
                CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmc3bDJORjRldHNLVUVfSXNscF92Z3BvV2RVcUpMTmJKWXZFUEZjUFQ2clBITmEtNklFaFJOallKamxsbUc1SlBxcW93TUFXWHdJZ2hmdGZyamk4MHN0MV91LWc9PQ==) # <-- Put your encrypted keystore alias password here
                CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmc3bDNVckhjd2QwcDVwOFhaRTh6Q1ZlRnVRZ0w2RTVCVkxrZXhUcUpSQVZXUXc1cGZ4RzBjWnh2eW5ZQnlxSWVyVWxrWG1aMGI3bzdreXA0N1d0XzdyR192bHc9PQ==) # <-- Put your encrypted keystore alias username here 
            node: latest
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Set up keystore
              script: |
                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
                    storePassword=$CM_KEYSTORE_PASSWORD
                    keyPassword=$CM_KEY_ALIAS_PASSWORD
                    keyAlias=$CM_KEY_ALIAS_USERNAME
                    storeFile=/tmp/keystore.keystore
                    EOF               
            - name: Build Android release
              script: |
                # Set environment variable so it can be used to increment build number in android/app/build.gradle
                # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
                # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
                export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
                cd android && ./gradlew assembleRelease
        artifacts:
            - android/app/build/outputs/**/*.apk
        publishing:
            # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
            email:
                recipients:
                    - user_1@example.com
                    - user_2@example.com
                notify:
                  success: true     # To not receive a notification when a build succeeds
                  failure: false    # To not receive a notification when a build fails
            slack: 
              # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
              channel: '#channel-name'
              notify_on_build_start: true   # To receive a notification when a build starts
              notify:
                success: true               # To not receive a notification when a build succeeds
                failure: false              # To not receive a notification when a build fails
            google_play:
              # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
              credentials: Encrypted(...) # <-- Put your encrypted google-services.json here
              track: alpha
    react-native-ios:
        name: React Native iOS
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            vars:
                # Env vars for automatic iOS code signing
                # See the following link for more details - https://docs.codemagic.io/code-signing-yaml/signing-ios/
                XCODE_WORKSPACE: "ios/YOUR_WORKSPACE_NAME.xcworkspace" # <-- Put the name of your Xcode workspace here
                XCODE_SCHEME: "YOUR_SCHEME_NAME" # <-- Put the name of your Xcode scheme here
                APPLE_ID: Encrypted(...) # <-- Put you encrypted Apple ID here
                APP_SPECIFIC_PASSWORD: Encrypted(...) # <-- Put your encrypted App Specific Password here. For more information visit: https://support.apple.com/en-us/HT204397
                # https://appstoreconnect.apple.com/access/api
                APP_STORE_CONNECT_ISSUER_ID: Encrypted(...) # <-- Put your App Store Connect Issuer Id here
                APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...) # <-- Put your App Store Connect Key Identifier here
                APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your App Store Connect Private Key here
                CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your Certificate Private key here
                BUNDLE_ID: "YOUR_BUNDLE_ID_HERE" # <-- Put your Bundle Id here e.g com.domain.myapp
                APP_STORE_APP_ID: 1555555551 # <-- Put the app id number here. This is found in App Store Connect > App > General > App Information
            node: latest
            xcode: 12.5
            cocoapods: default
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Install CocoaPods dependencies
              script: |
                cd ios && pod install
            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
              script: |
                keychain initialize
            - name: Fetch signing files
              script: |
                # For information about Codemagic CLI commands visit: https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md
                # For details about the --type paramater below - https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--mac_catalyst_app_development--mac_catalyst_app_direct--mac_catalyst_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store
                app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
            - name: Use system default keychain
              script: |
                keychain add-certificates
            - name: Increment build number
              script: |
                #!/bin/sh
                set -e
                set -x
                cd $FCI_BUILD_DIR/ios
                # agvtool new-version -all $(($BUILD_NUMBER + 1))
                agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
            - name: Set up code signing settings on Xcode project
              script: |
                xcode-project use-profiles --warn-only
            - name: Build ipa for distribution
              script: |
                xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME" 
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        publishing:
          # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
          email:
            recipients:
              - user_1@example.com
              - user_2@example.com
            notify:
              success: true     # To not receive a notification when a build succeeds
              failure: false    # To not receive a notification when a build fails
          slack: 
            # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
            channel: '#channel-name'
            notify_on_build_start: true   # To receive a notification when a build starts
            notify:
              success: true               # To not receive a notification when a build succeeds
              failure: false              # To not receive a notification when a build fails
          app_store_connect:                 
              apple_id: $APPLE_ID
              password: $APP_SPECIFIC_PASSWORD
    