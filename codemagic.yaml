# Check out https://docs.codemagic.io/yaml/building-a-react-native-app/ for more information
# Please review and update values

workflows:
    react-native-android:
        name: React Native Android
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            vars:
                GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: Encrypted(...) # <-- Put encrypted CONTENTS of your Gloud crendentials file here
                PACKAGE_NAME: "com.kasunv.codemagictest" # <-- Put your package name here e.g. com.domain.myapp
                CM_KEYSTORE: Encrypted(Z0FBQUFBQmc3ckdVbUdKSmE2dDl5bE5uOWQxNHlKWHFZMzZYVFFzMmdfeHBTaEVQaVFjejVOSjNiNGU4c21xZjI0OTY4UUFUbU92dmJOX2U1U3hJT1QyVGZxbDhvMGtBQ04tNEY2ZjhOejFoYmExWjdxTkNpaU9fRGNEdEdMOVA5UlFwVTVtMzFYWndPWEQ1N3k3eUl2cU9PTmpQRFo0NHNFNmRwV3RUYjhFcTYydVRwOEU1T0Y1WXN2RlVwdkUxWWwySF9pVGpXVjItRlpkeXg3VUdaa0VYZHBQWTZsbGZjNnpHYlhwXzFpWTBROHhFTWs1UWRENzhka3dTWmlJSWVYM3hPU0dacEtTd2FsVUZPTDFvWDF1MXNGM2NZdGhOcVY2N3pmN1dSMHMwNHJGaW5NdjJxc3dDV0ppQzhva1dOZ2lfOUFlenRNRF9IUHpRY0RrTTV1X01Rc19obXpsWkF1aVBhNzFZVHp0RVpfcEsyUWo4RnRwZnliMjhwS2pjMURtMmlPejh1b3ZfcWM3aWk0MXdUSnFWTThzbFEtX01IR3pDeHF2RlBOSUtudmF6eWNQUW8wU0taLXlwWHdDUEg5ZTFEd3ctMmtZTUk5VVo5S3lXb0YxUVNqT1JjWEo4QTU0empZcG5ibHVDRXhfTlVLck1BdlRGNUN4XzJQZkNvQlEzN1RoUVVibkExNmRCcjdwdXBLUVk4enpDS1JTemR3dFd6R21jRkVWbVJMWFVpVkdmLV9ydmw5Z1dCcnRjcVR3cm5XREJUalBNVUw0c2FHRXRrSlRBdkFTNUtTdXM4ZGlnbHR2TDV3TkdjdExKM05BWktWcVpDWm4wMzlWa19EckszX0VIdTR2TElUUXV0WU5yYklZaGVwY3FIZ1V5UGt0ZDNvYjlqM01aZWdZRHU4TEdBRmE3Z2VrR1B3bnFnZEwtWURCbGFaa3F1aWRDOXhrSXVKX1QzaFFDekdfdXMwbWdyZFdyVlJhV1Zlam9wQTV3X09KOFNOVGtzSXRzTVktMDczR0hhbjFYWlVpY2lpUzFkTng0TFN2SUJYelpZTzdNWUREVzEtWENPOXdUSkpaU0M2YkJBWGUzV1J1bkRwaHp6ZkEtX1JTcGVpOS1jY3hEdkM3azRJb0Naa3FrQmFsWUg4U1hyMFJuODZMZDViYnFoQ3JDbVFWeU1RR2w2VW9kdllYcWNObUVBTGZXcEtWeU5pMVFTSG9iLUxfV3cycEFmTHBYWlB4OGJtYWtBbEtfaXE1UGFpdFhKU3FsQTRQQV9kUkdJcnZtUzBhc1ZXa1VXQ1FpN2tQUjhubHBac1FSdG9OTUxnLUc1dXlEbkhGZ0k0YjFMMjRZNmZVc2tWZ0hHeVU2cHVFQjNUaGRLVS11WHRmeUNuN0tFaHJHbkNIQ2J5MlhuY0VPWFh4ZS1SV3k2Yk96TC0xd0NCSU9mWkYwdTZoUzF2UE1NZ284TzQzZ1ZKMENYTWNWMFlGRE9XcTRUOTMzMjBFckgyYVNON1V5R1g4bTJHUXBXcmJiOEhFZVQyaS1hdDJOanVGR19uVGRFTng0djExMnkyNjVHWklseFVZU1NQcE5QWXQwU3FNdW1BZkVqbVJkOVNkYzZhMDU3WHRjNXNGeWZ0aHd5M3dYb3BxaTZnNmlmUjJaR1JmLXhJTGRIQkRQLTdjTWNQUFZzN3RhaUd4cndMTUJ2bm1rYXlzdDU5M2FxTW9GY2N4N18ta3hIbEUtLWVQajJrc21QWlFXQlI4NFRqZUFRRDMwdUExczIxcUdwYWtlY2xDamlMckczU2dHbUlHVEN2UnIzTGhCT29KQmZJSjQ2LUdaSlg3UHFCX1ZjejZTQXdDWWRKN2RTQWZ1aWNyeXRZenRWeHVseW02akJkeEw4clJFMVB3cW82dzRUQ19WSWlyZ3JLLVpaMng2NzU1TjZyS285aWFVcTU0a3JrMXBqM2FyZ1EtSlNtc0tMcllUOFpkZmNMWERNM2FhM0llN04wWmRia0RRVVhyNkdHUGo1bzlDT2RzOC1pb2RrZUZKS05Deml1MTdSN1RsbGlHb2laZVNFb3N6UWhvVzNLVTk1X2I1Z3UzSjdoM1FCM1NGOGFybmFIcUY3ZlhkVkFZdzNJUDNlZzJaN3lPSWhBcGxhQm1PWE1xUHRzdTh0ZjB5dEEtbHI1SGhVdWdWdC1yRVpjb3c4OUFDVV9Vb243VGRLeE9QeDNHa1ZjTmQ3Y21nOU5IQkIzSDNyaTl3cURiTkRNUGN3a19oRUpYbG0tTng1Smh0S2MyQUEwZERjYk5DTFF2czhoWXlfeG9zYXdVR2hYM0VlcTVRVDI0SzgzOUxuUkJUMEFuRXNDNjhMYzYwc2NlVmVCUGc4RE1JVUZ5MHc2LWllWTl4cGpyQ29xQ2NVUm1yRDFWc1l4SVFVLVFVTWhFclA4ZW9FT3FldlliQmk5Ul9PellCaUtVY2tidldTZmxjbjVvb0FzSTdhSFU1b3JqNHo2N05EWHNlMWJVbGM1eEFYY0RSQ1lGSWVBMTVLcVVpQThjN3ZUTUxRWWRQZjFfdmRHOUhWZnJ1NWI0cDZ6RWJ0NUMzMnJyZVRIdWx5QnJxbUpRNlkyVWJzUEoxSk9rY05jQkVNTWVoRGNsZjBfcDNjYXFGY25GVXdySHQ1Q1k5ZlVDeTAtQ3EtVHVTbWtOVmx0X3F6VUpxOWdIMXluQjloTWY4NFM2cVBELURDenZ2UnNYZEczbldNbm40anh5TVBCdU16aUVUcUJzMUZLWTljNkRXaEJjb2R2Znd5SkFTNTdqOGd2TGprVktuRXFjQnpickdqaHBZT09IeXpVNW45Y1RUTTMtQkFXX2UxWWpfeXJudm1sbURZWnNVWXBQOFIwWGVJNk8tbnB1dzd3aE9HSG5uTTdhVE5wdlppdzgwakFhQWFJMEZuWnJmYWNOREZXd3ZxVWUxd1RreTVLcmc1b2hwRGxuTzZNQUMtRDRidG1Bd1lpTERiUWZaQnZyRDVydkdPOUEyaUxmZ3pUQUVWYzhHb3drMHI3YnJBS3A3UHd0U3QzTjI5dEp3WHZrV01rNmFxZmc3Yk5iQ2h1ZEtTUTUwRnJxYV9DQWpZTWpKTTZia21HdXJFeHUzNWo5TGxKLU9PM1JiaktSMHJjblpGdHh5Y28wWHVsTGRoSllxV2QyZzMyRnVqVW1GSHhRZUdsY3Fwb2IzVDZUQXVjSkxFZXJhVl9rWXpvNG9PZ2xDTFFTTnZVTVB6R0xKQ1ppSjZHWG1QNWVtX3VpSHZVVV9OX1RpWkhNdXFvZWpPNV81NG9wU2F6VjUxZG00cjA2YXoyTlhpSkVfZGs5dW85Zkw2bnAtMUo1YlB6U3VTaUtRRkZINk94T3BLNUdkU0xrbzRlMHhuQk9qQmt1WFB2R2tsWHQ0Vkx6TFpHU09mT0lPTUw3blRmcVhKTHpLeXVCVWdCNzg2ZVhYeGxLbGg0eWpSczZWM0xXQ3loRlloQVNraVFKdzdLVkIxN2VrUFprQWxPTTlXX1FzNEJOY1Z3VFN1YktBb1hHaGVpSFkydVh2amNRTmRIdWJjYTlqeF9LZzE0Snh2YXUza3ZYTVBGblZrQnZPNGtkWmIzX3hPMWRLQi1RWTNtQ0VZSTItY213SjNPLWhTR2FsVUJ3b1lrRHFtUkZZR0VoeHh3Zk5pb3RtTlRMaXNuZjBOUnZRRHRjaFZIb0lCZE1uci1jQnVycjdLQjZqUjlHZFA5bWVaM2VXTkwycFJfNmU1YUFiQnR2RktVSE9lSlZka0tOZEVyZUVYTzNWS0hjWEJnSHdaeUNTX0xqTlN3dUxyb1lDYUNRaXlvd2dKMDlqbTdqZURSNV9NS0pvVzJpZUUzYjRFSUt1ZjEyVVhMTExUY0Z5XzU5U1Racm9fZHJ6bHBhV01DM1VMNENXVHlVZmVKa3BzdTFWVEQ2bk0yT1FGUUlSb1ljRUxhOW9HdHh0bUhydWdtdG9FN3NqVkNXbVhHYnFoRVd6UE10OC13YkpYZ3VhQkU3d04yMmJoWDFEaUs2Zko5dXhiUG5oTnlMNFZDT1g5UWRxYUZTQmJ4WURfaXB6TkVRNEtZVnhiOHBHQkl5MnNKaTk0eGN4d1IwTWdvR211b3Q3X2toSFk3MVp4bUh3SUtVX2t5ZGZuY1NYNG1ScW9RdE5DY1BCNTFmYnhVenhROGo2TW5uZlJiWHdERGtNYS1USGJxejhPb0lXdnQ0TUZva3pmTE94NDZCeVh1eWozVzFrb3dKUmZ3aG9qVE80X1RBSHgwZllPOTNhS2xkY3ZfNEZual9WRUZHc21vYVdReHNYdGJLQlFjSGswUU5mbjdLUFlLb1daYkkzdjJ1VHhsZFdHNWNBc1RkMzdnbWM4MUpvNXpDSV8tTTVwZkFsaEdXLTRSYUpZNFJDQUFWeTlUcjBzY1FhNVpvNUI5TGcyaERaVWd1VkFJeHc4SXV4STdVaFBOa0diUzBfaGg3M19jRE1zcHpVaDlxSW5uMjk1QWNXRW4tSWhFX1NnTlZaX2NzdGZlZzV3WVdDSlJzX0VDcUw2T2NDeHAwQkFrQk1YTS03RWthVTM3anpDaDlKdGU4bk44VzQ5LUJwRHhjY0l6ZmR1U01JRUg3LS1ZUURnWUNyTm1OeVhlZEpUd080Q2hyRWVkRWhLRW5rd2VuTmJkdHNmQUxHbUFtaVBMRVFlVnljczhZb1ZvN1V6UW03dUtiNVR0OHZobldsX096WXVvYkRzNTNrQ0NZSWRyTXBieVgxYVRfUnVPM20xSjloOXdDYUlWZm82QXotNlVuaTE4bm52RXVQQ0NjbldUUGFjTW1QMmI2R3I4ek1NWDVMRW1FUl9jTkx2T0pkSnlka0U3Q2ZUakZ5all3cXVnSUlpbUFNVXRENWtWekhtMzZEX2w1X2o5N2M3Y1BtQUlYNWpOTmdPVXlybFR0RXdzUGRnZHFkZk9mQjFCU2xRbVI1X2VQeWo0cGRQdE9abk9fNjBfZ01VY1VzTk0xNVJrOU5TWF9QT1o2UHBIck9IOTF1MXdkdVhERFFZSnBhMlVNdnF3WHlUX1B1QmlYSEpaMEEzY29FYmM4RGhNc25LM29zSl95Ym5mdFRLY256RU1tUS0wSUpfN3l3aFFKWExQS0hVeGcwc3RuOEFPa00xdTJlckVsU1NfdWxGQmxMYURKQ0RsV0dLR3ZBbWh1MFpiYUhMclBuVzFzNk1mMXlPbTdYVXJ0Ml9Pck0xSWxfNU5jcnBreTNfaEtMck44RmVTRTZOWUVYdDdXejdiYWZxaEh3eFBuME02YU5CLWl2V1FTclQyUjViNTlJWUFiZTRTS0tQS3lLODBKeWx3N0JpUVhPaWVwRDMwSGNuOGZ4NUNFaWx5UzVWVFg2Ny1YczVNNWkxR3ZYSDY5RWNBcUNaaV9IWmxiTDl5M3RlNEVuSkRaRXN5NU9OMERrS0dCSnliYjVaMDVXaVp4TThtc0ZVRTZ6UVFmVlJMMkFmNGhtRDc1OGwwX0lFcE5ybHVoRXA3REZ2OWdjdUFidk8zblFmanYxU0FsT0lsT0pGeVA5YkJYZEhpejdyb2IxajZNc1pISTJaamlJVWFGZnRXWjRPQWdYazBndWswTWV4Rk9scjlFMzlMQTlWT1c0Y1RlUlh5d1NlcVMxWFFGX1FmSGI3UVZwU0hpTDJ5a0hFemF3SC0xaEFlRmlpRHdDUl9DRHRNZ2RmVVhkN0FlekdieUdiWUYzRV9WZFF2OERLUHQwTUUtU2psSk5KaVNVcktYNDdJUm95NHlScEtjRTlJMUt5bTRONlBUTFlLc1F6QWl2V2RBNm9vWVlzbEZQWDFVMTloZmxEQnd5YmRERjlFNVNrRHl4cC1jUDhvLUk2WnlzMFB0UUYzSmpJZ1NqMTRTWk40bEFIR0djS1R0dXlDdXA2bzRUVzZwdHJ1RUFwNnFreG5wN2oxRTB3RHR2ZFpZY3JoYnR4aXFNUXAzeFJUX0JJWm84Z3ZGZTR5TFJiTUxzcVpNc3RGUlk1NTZkUjBrU1psamljZHY3eGxGV21BOE4tTEdLeURWOFJtLV8zSW1YT3piTnBPYVVvWFY5U1dDdHRKV25kdGY1enUzY0t3UmFyS3BDWm1RRlgydUYxcWZFX2F0bHA2RWJiUk1VT3RJdkZITG9UOWVVakE0clp1eTZiME0zVWtLYk9ocWVjSnl6OWxFTmp0SVNVb0lRV0w4RQ==) # <-- Put your encrypted keystore file here
                CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmc3bDJORjRldHNLVUVfSXNscF92Z3BvV2RVcUpMTmJKWXZFUEZjUFQ2clBITmEtNklFaFJOallKamxsbUc1SlBxcW93TUFXWHdJZ2hmdGZyamk4MHN0MV91LWc9PQ==) # <-- Put your encrypted keystore password here
                CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmc3bDJORjRldHNLVUVfSXNscF92Z3BvV2RVcUpMTmJKWXZFUEZjUFQ2clBITmEtNklFaFJOallKamxsbUc1SlBxcW93TUFXWHdJZ2hmdGZyamk4MHN0MV91LWc9PQ==) # <-- Put your encrypted keystore alias password here
                CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmc3bDNVckhjd2QwcDVwOFhaRTh6Q1ZlRnVRZ0w2RTVCVkxrZXhUcUpSQVZXUXc1cGZ4RzBjWnh2eW5ZQnlxSWVyVWxrWG1aMGI3bzdreXA0N1d0XzdyR192bHc9PQ==) # <-- Put your encrypted keystore alias username here 
            node: latest
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Set up keystore
              script: |
                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
                    storePassword=$CM_KEYSTORE_PASSWORD
                    keyPassword=$CM_KEY_ALIAS_PASSWORD
                    keyAlias=$CM_KEY_ALIAS_USERNAME
                    storeFile=/tmp/keystore.keystore
                    EOF               
            - name: Build Android release
              script: |
                # Set environment variable so it can be used to increment build number in android/app/build.gradle
                # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
                # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
                export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
                cd android && ./gradlew assembleRelease
        artifacts:
            - android/app/build/outputs/**/*.apk
        publishing:
            # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
            email:
                recipients:
                    - kasunglobe@gmail.com
                notify:
                  success: true     # To not receive a notification when a build succeeds
                  failure: false    # To not receive a notification when a build fails
            slack: 
              # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
              channel: '#channel-name'
              notify_on_build_start: true   # To receive a notification when a build starts
              notify:
                success: true               # To not receive a notification when a build succeeds
                failure: false              # To not receive a notification when a build fails
            google_play:
              # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
              credentials: Encrypted(...) # <-- Put your encrypted google-services.json here
              track: alpha
    react-native-ios:
        name: React Native iOS
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            vars:
                # Env vars for automatic iOS code signing
                # See the following link for more details - https://docs.codemagic.io/code-signing-yaml/signing-ios/
                XCODE_WORKSPACE: "ios/YOUR_WORKSPACE_NAME.xcworkspace" # <-- Put the name of your Xcode workspace here
                XCODE_SCHEME: "YOUR_SCHEME_NAME" # <-- Put the name of your Xcode scheme here
                APPLE_ID: Encrypted(...) # <-- Put you encrypted Apple ID here
                APP_SPECIFIC_PASSWORD: Encrypted(...) # <-- Put your encrypted App Specific Password here. For more information visit: https://support.apple.com/en-us/HT204397
                # https://appstoreconnect.apple.com/access/api
                APP_STORE_CONNECT_ISSUER_ID: Encrypted(...) # <-- Put your App Store Connect Issuer Id here
                APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...) # <-- Put your App Store Connect Key Identifier here
                APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your App Store Connect Private Key here
                CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your Certificate Private key here
                BUNDLE_ID: "YOUR_BUNDLE_ID_HERE" # <-- Put your Bundle Id here e.g com.domain.myapp
                APP_STORE_APP_ID: 1555555551 # <-- Put the app id number here. This is found in App Store Connect > App > General > App Information
            node: latest
            xcode: 12.5
            cocoapods: default
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Install CocoaPods dependencies
              script: |
                cd ios && pod install
            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
              script: |
                keychain initialize
            - name: Fetch signing files
              script: |
                # For information about Codemagic CLI commands visit: https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md
                # For details about the --type paramater below - https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--mac_catalyst_app_development--mac_catalyst_app_direct--mac_catalyst_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store
                app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
            - name: Use system default keychain
              script: |
                keychain add-certificates
            - name: Increment build number
              script: |
                #!/bin/sh
                set -e
                set -x
                cd $FCI_BUILD_DIR/ios
                # agvtool new-version -all $(($BUILD_NUMBER + 1))
                agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
            - name: Set up code signing settings on Xcode project
              script: |
                xcode-project use-profiles --warn-only
            - name: Build ipa for distribution
              script: |
                xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME" 
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        publishing:
          # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
          email:
            recipients:
              - user_1@example.com
              - user_2@example.com
            notify:
              success: true     # To not receive a notification when a build succeeds
              failure: false    # To not receive a notification when a build fails
          slack: 
            # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
            channel: '#channel-name'
            notify_on_build_start: true   # To receive a notification when a build starts
            notify:
              success: true               # To not receive a notification when a build succeeds
              failure: false              # To not receive a notification when a build fails
          app_store_connect:                 
              apple_id: $APPLE_ID
              password: $APP_SPECIFIC_PASSWORD
    